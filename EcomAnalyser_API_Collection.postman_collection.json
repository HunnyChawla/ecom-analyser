{
	"info": {
		"_postman_id": "ecom-analyser-api-collection",
		"name": "EcomAnalyser API Collection",
		"description": "Complete API collection for EcomAnalyser - E-commerce Analytics Portal\n\nIncludes:\n- File Upload & Ingestion APIs\n- Analytics APIs\n- SKU Management APIs\n- Data Merge APIs\n- Health Check APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "ecom-analyser"
	},
	"item": [
		{
			"name": "File Upload & Ingestion",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/ingestion/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ingestion",
								"health"
							]
						},
						"description": "Check if the ingestion service is healthy and running"
					},
					"response": []
				},
				{
					"name": "Upload Orders CSV",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "type",
									"value": "ORDERS",
									"type": "text",
									"description": "File type must be ORDERS"
								},
								{
									"key": "file",
									"type": "file",
									"src": "{{orders_csv_path}}",
									"description": "CSV file containing order data"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/ingestion/upload?type=ORDERS",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ingestion",
								"upload"
							],
							"query": [
								{
									"key": "type",
									"value": "ORDERS"
								}
							]
						},
						"description": "Upload orders CSV file for ingestion into staging tables. Validates schema and stores raw data with batch ID."
					},
					"response": []
				},
				{
					"name": "Upload Payments Excel",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "type",
									"value": "PAYMENTS",
									"type": "text",
									"description": "File type must be PAYMENTS"
								},
								{
									"key": "file",
									"type": "file",
									"src": "{{payments_xlsx_path}}",
									"description": "Excel file containing payment data"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/ingestion/upload?type=PAYMENTS",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ingestion",
								"upload"
							],
							"query": [
								{
									"key": "type",
									"value": "PAYMENTS"
								}
							]
						},
						"description": "Upload payments Excel file for ingestion into staging tables. Validates schema and stores raw data with batch ID."
					},
					"response": []
				},
				{
					"name": "Upload Orders Excel",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "type",
									"value": "ORDERS",
									"type": "text",
									"description": "File type must be ORDERS"
								},
								{
									"key": "file",
									"type": "file",
									"src": "{{orders_xlsx_path}}",
									"description": "Excel file containing order data"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/ingestion/upload?type=ORDERS",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ingestion",
								"upload"
							],
							"query": [
								{
									"key": "type",
									"value": "ORDERS"
								}
							]
						},
						"description": "Upload orders Excel file for ingestion into staging tables. Validates schema and stores raw data with batch ID."
					},
					"response": []
				}
			],
			"description": "File upload and ingestion endpoints for processing orders and payments data"
		},
		{
			"name": "Legacy File Upload",
			"item": [
				{
					"name": "Upload Orders (Legacy)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{orders_file_path}}",
									"description": "Orders file (CSV or Excel)"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/upload/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"upload",
								"orders"
							]
						},
						"description": "Legacy endpoint for uploading orders file (CSV or Excel format)"
					},
					"response": []
				},
				{
					"name": "Upload Payments (Legacy)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{payments_file_path}}",
									"description": "Payments file (Excel format)"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/upload/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"upload",
								"payments"
							]
						},
						"description": "Legacy endpoint for uploading payments file (Excel format)"
					},
					"response": []
				},
				{
					"name": "Upload SKU Prices",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{sku_prices_file_path}}",
									"description": "SKU prices file (Excel format)"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/upload/sku-prices",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"upload",
								"sku-prices"
							]
						},
						"description": "Upload SKU prices file for profit/loss calculations"
					},
					"response": []
				}
			],
			"description": "Legacy file upload endpoints (still functional)"
		},
		{
			"name": "Analytics",
			"item": [
				{
					"name": "Orders by Timeframe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/analytics/orders-by-timeframe?start={{start_date}}&end={{end_date}}&aggregation={{aggregation}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"analytics",
								"orders-by-timeframe"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								},
								{
									"key": "aggregation",
									"value": "{{aggregation}}",
									"description": "Aggregation level: DAY, MONTH, QUARTER, YEAR"
								}
							]
						},
						"description": "Get orders aggregated by timeframe (day, month, quarter, year)"
					},
					"response": []
				},
				{
					"name": "Payments by Timeframe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/analytics/payments-by-timeframe?start={{start_date}}&end={{end_date}}&aggregation={{aggregation}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"analytics",
								"payments-by-timeframe"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								},
								{
									"key": "aggregation",
									"value": "{{aggregation}}",
									"description": "Aggregation level: DAY, MONTH, QUARTER, YEAR"
								}
							]
						},
						"description": "Get payments aggregated by timeframe (day, month, quarter, year)"
					},
					"response": []
				},
				{
					"name": "Top Ordered Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/analytics/top-ordered-items?start={{start_date}}&end={{end_date}}&limit={{limit}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"analytics",
								"top-ordered-items"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Number of top items to return (default: 10)"
								}
							]
						},
						"description": "Get top ordered items based on quantity sold"
					},
					"response": []
				},
				{
					"name": "Top Profitable SKUs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/analytics/top-profitable-skus?start={{start_date}}&end={{end_date}}&limit={{limit}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"analytics",
								"top-profitable-skus"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Number of top SKUs to return (default: 10)"
								}
							]
						},
						"description": "Get top profitable SKUs based on profit calculation"
					},
					"response": []
				},
				{
					"name": "Profit Trends",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/analytics/profit-trends?start={{start_date}}&end={{end_date}}&aggregation={{aggregation}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"analytics",
								"profit-trends"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								},
								{
									"key": "aggregation",
									"value": "{{aggregation}}",
									"description": "Aggregation level: DAY, MONTH, QUARTER, YEAR"
								}
							]
						},
						"description": "Get profit trends aggregated by timeframe"
					},
					"response": []
				},
				{
					"name": "Loss Trends",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/analytics/loss-trends?start={{start_date}}&end={{end_date}}&aggregation={{aggregation}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"analytics",
								"loss-trends"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								},
								{
									"key": "aggregation",
									"value": "{{aggregation}}",
									"description": "Aggregation level: DAY, MONTH, QUARTER, YEAR"
								}
							]
						},
						"description": "Get loss trends aggregated by timeframe"
					},
					"response": []
				},
				{
					"name": "Orders by Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/analytics/orders-by-status?start={{start_date}}&end={{end_date}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"analytics",
								"orders-by-status"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								}
							]
						},
						"description": "Get order counts by status for the specified date range"
					},
					"response": []
				},
				{
					"name": "Orders by Status Monthly",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/analytics/orders-by-status-monthly?start={{start_date}}&end={{end_date}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"analytics",
								"orders-by-status-monthly"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								}
							]
						},
						"description": "Get order counts by status with monthly breakdown"
					},
					"response": []
				}
			],
			"description": "Analytics endpoints for dashboard charts and data visualization"
		},
		{
			"name": "SKU Management",
			"item": [
				{
					"name": "Download SKU Price Template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sku-prices/template",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sku-prices",
								"template"
							]
						},
						"description": "Download SKU price template with existing prices populated"
					},
					"response": []
				}
			],
			"description": "SKU price management endpoints"
		},
		{
			"name": "SKU Groups",
			"item": [
				{
					"name": "Download SKU Group Template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sku-groups/template",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sku-groups",
								"template"
							]
						},
						"description": "Download SKU group template for defining SKU groups and pricing"
					},
					"response": []
				},
				{
					"name": "Upload SKU Groups",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{sku_groups_file_path}}",
									"description": "SKU groups Excel file"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/sku-groups/upload",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sku-groups",
								"upload"
							]
						},
						"description": "Upload SKU groups definition file"
					},
					"response": []
				},
				{
					"name": "Get All SKU Groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sku-groups/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sku-groups",
								""
							]
						},
						"description": "Get all SKU groups"
					},
					"response": []
				},
				{
					"name": "Get Ungrouped SKUs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sku-groups/ungrouped",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sku-groups",
								"ungrouped"
							]
						},
						"description": "Get SKUs that are not assigned to any group"
					},
					"response": []
				},
				{
					"name": "Top Performing Groups by Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sku-groups/analytics/top-performing?start={{start_date}}&end={{end_date}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sku-groups",
								"analytics",
								"top-performing"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								}
							]
						},
						"description": "Get top performing SKU groups by order count"
					},
					"response": []
				},
				{
					"name": "Revenue Contribution by Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sku-groups/analytics/revenue-contribution?start={{start_date}}&end={{end_date}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sku-groups",
								"analytics",
								"revenue-contribution"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								}
							]
						},
						"description": "Get revenue contribution by SKU group"
					},
					"response": []
				},
				{
					"name": "Profit Comparison by Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sku-groups/analytics/profit-comparison?start={{start_date}}&end={{end_date}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sku-groups",
								"analytics",
								"profit-comparison"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start_date}}",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "end",
									"value": "{{end_date}}",
									"description": "End date (YYYY-MM-DD)"
								}
							]
						},
						"description": "Get profit comparison across SKU groups"
					},
					"response": []
				}
			],
			"description": "SKU group management and analytics endpoints"
		},
		{
			"name": "Data Merge",
			"item": [
				{
					"name": "Get Merge Statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/data-merge/statistics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"data-merge",
								"statistics"
							]
						},
						"description": "Get statistics about merged order and payment data"
					},
					"response": []
				},
				{
					"name": "Get Merged Data (Paginated)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/data-merge/merged-data/paginated?page={{page}}&size={{size}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"data-merge",
								"merged-data",
								"paginated"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number (0-based)"
								},
								{
									"key": "size",
									"value": "{{size}}",
									"description": "Page size"
								}
							]
						},
						"description": "Get paginated merged data from orders and payments"
					},
					"response": []
				},
				{
					"name": "Get Merged Data by Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/data-merge/merged-data/status/{{status}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"data-merge",
								"merged-data",
								"status",
								"{{status}}"
							]
						},
						"description": "Get merged data filtered by final status (e.g., DELIVERED, RTO_COMPLETE)"
					},
					"response": []
				},
				{
					"name": "Get Merged Data by Source",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/data-merge/merged-data/source/{{source}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"data-merge",
								"merged-data",
								"source",
								"{{source}}"
							]
						},
						"description": "Get merged data filtered by status source (ORDER_FILE, PAYMENT_FILE)"
					},
					"response": []
				}
			],
			"description": "Data merge endpoints for combining order and payment data"
		},
		{
			"name": "Swagger Documentation",
			"item": [
				{
					"name": "Swagger UI",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/swagger-ui.html",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"swagger-ui.html"
							]
						},
						"description": "Access Swagger UI for interactive API documentation"
					},
					"response": []
				}
			],
			"description": "API documentation endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default values for common variables",
					"if (!pm.environment.get('start_date')) {",
					"    pm.environment.set('start_date', '2025-01-01');",
					"}",
					"if (!pm.environment.get('end_date')) {",
					"    pm.environment.set('end_date', '2025-01-31');",
					"}",
					"if (!pm.environment.get('aggregation')) {",
					"    pm.environment.set('aggregation', 'MONTH');",
					"}",
					"if (!pm.environment.get('limit')) {",
					"    pm.environment.set('limit', '10');",
					"}",
					"if (!pm.environment.get('page')) {",
					"    pm.environment.set('page', '0');",
					"}",
					"if (!pm.environment.get('size')) {",
					"    pm.environment.set('size', '20');",
					"}",
					"if (!pm.environment.get('status')) {",
					"    pm.environment.set('status', 'DELIVERED');",
					"}",
					"if (!pm.environment.get('source')) {",
					"    pm.environment.set('source', 'ORDER_FILE');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string",
			"description": "Base URL for the EcomAnalyser backend API"
		},
		{
			"key": "start_date",
			"value": "2025-01-01",
			"type": "string",
			"description": "Default start date for date range queries"
		},
		{
			"key": "end_date",
			"value": "2025-01-31",
			"description": "Default end date for date range queries"
		},
		{
			"key": "aggregation",
			"value": "MONTH",
			"type": "string",
			"description": "Default aggregation level for time series data"
		},
		{
			"key": "limit",
			"value": "10",
			"type": "string",
			"description": "Default limit for top N queries"
		},
		{
			"key": "page",
			"value": "0",
			"type": "string",
			"description": "Default page number for pagination"
		},
	{
			"key": "size",
			"value": "20",
			"type": "string",
			"description": "Default page size for pagination"
		},
		{
			"key": "status",
			"value": "DELIVERED",
			"type": "string",
			"description": "Default status for filtering merged data"
		},
		{
			"key": "source",
			"value": "ORDER_FILE",
			"type": "string",
			"description": "Default source for filtering merged data"
		},
		{
			"key": "orders_csv_path",
			"value": "/path/to/your/orders.csv",
			"type": "string",
			"description": "Path to orders CSV file for testing"
		},
		{
			"key": "orders_xlsx_path",
			"value": "/path/to/your/orders.xlsx",
			"type": "string",
			"description": "Path to orders Excel file for testing"
		},
		{
			"key": "payments_xlsx_path",
			"value": "/path/to/your/payments.xlsx",
			"type": "string",
			"description": "Path to payments Excel file for testing"
		},
		{
			"key": "sku_prices_file_path",
			"value": "/path/to/your/sku_prices.xlsx",
			"type": "string",
			"description": "Path to SKU prices file for testing"
		},
		{
			"key": "sku_groups_file_path",
			"value": "/path/to/your/sku_groups.xlsx",
			"type": "string",
			"description": "Path to SKU groups file for testing"
		}
	]
}

